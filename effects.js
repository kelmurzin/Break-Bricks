function Эффект_Уничтожение_Блока_Очки_Активировать(Позиция_X, Позиция_Y) {
    let Очки = Игра_Сцена.Очки.Количество_За_Блок
    Анимация_Запустить({
        Продолжительность_Анимации: 0.5,
        Анимация: function (п_Время) {
            let п_Текст_Очки = new Текст({
                Текст: `+ ${Очки}`, Позиция_X: Позиция_X, Позиция_Y: Позиция_Y, Выравнивание_По: "center", Цвет: "white", Тень: true, Цвет_Тени: `hsl(${Очки + 200}, 100%, 50%)`,
                Размер_Шрифта: 100, Название_Шрифта: "Agua", Базовая_Линия: "middle", Прозрачность: Линейная_Интерполяция(1, 0, п_Время)
            }).Обновить()
        }
    })
}

function Эффект_Звезды_Активировать(Позиция_X, Позиция_Y) {

    let Звезды = []
    const Скорость = 10
    for (let и = 0; и < 10; и++) {
        Звезды.push(new Спрайт({
            Позиция_X: Позиция_X, Позиция_Y: Позиция_Y, Картинка: Картинки.Звезда,
            Якорь: 0.5,
            Скорость_По_X: Значение_Получить_Случайное(-Скорость, Скорость), Скорость_По_Y: Значение_Получить_Случайное(-Скорость, Скорость),
            Вращение: true, Масштаб: Значение_Получить_Случайное(1, 2), Угол_В_Градусах: Значение_Получить_Случайное(0, 250)
        }))
    }

    Анимация_Запустить({
        Продолжительность_Анимации: 0.5,
        Анимация: function (п_Время) {
            for (let и = 0; и < Звезды.length; и++) {
                let п_Элемент = Звезды[и]
                п_Элемент.Прозрачность = Линейная_Интерполяция(1, 0, п_Время)
                п_Элемент.Обновить()
                п_Элемент.Скорость_По_X = Линейная_Интерполяция(п_Элемент.Скорость_По_X, 0, п_Время)
                п_Элемент.Скорость_По_Y = Линейная_Интерполяция(п_Элемент.Скорость_По_Y, -1, п_Время)
            }
        }
    })
}

function Эффект_Уничтожения_Блока_Активировать(Позиция_X, Позиция_Y) {
    let п_Массив = []
    const Скорость = 10
    for (let и = 0; и < 15; и++) {
        п_Массив.push(new Квадрат({
            Позиция_X: Позиция_X, Позиция_Y: Позиция_Y,
            Ширина: 30,
            Высота: 30,
            Цвет: `hsl(70, 70%, 50%)`,
            Якорь: 0.5,
            Скорость_По_X: Значение_Получить_Случайное(-Скорость, Скорость), Скорость_По_Y: Значение_Получить_Случайное(-Скорость, Скорость),
            Угол_В_Градусах: Значение_Получить_Случайное(0, 250)
        }))
    }

    Анимация_Запустить({
        Продолжительность_Анимации: 0.4,
        Анимация: function (п_Время) {
            for (let и = 0; и < п_Массив.length; и++) {
                let п_Элемент = п_Массив[и]
                п_Элемент.Прозрачность = Линейная_Интерполяция(1, 0, п_Время)
                п_Элемент.Обновить()
                п_Элемент.Скорость_По_X = Линейная_Интерполяция(п_Элемент.Скорость_По_X, 0, п_Время)
                п_Элемент.Скорость_По_Y = Линейная_Интерполяция(п_Элемент.Скорость_По_Y, -1, п_Время)
                п_Элемент.Ширина = Линейная_Интерполяция(30,0,п_Время)
                п_Элемент.Высота = Линейная_Интерполяция(30,0,п_Время)
            }
        }
    })
}

class Эффект_Фона {
    constructor() {
        this.Квадрат = new Круг({
            Позиция_X: -200, Позиция_Y: -100,
            Радиус: 5,
            Цвет: "white",
        })
        this.Активный = true
    }

    Активировать() {
        let п_Число = Math.random()
        let Позиция_X_Изначальная = п_Число > 0.5 ? Значение_Получить_Случайное(0, 1080) : (Math.random() > 0.5 ? -20 : 1100)
        let Позиция_Y_Изначальная = п_Число > 0.5 ? (Math.random() > 0.5 ? 0 : 1920) : Значение_Получить_Случайное(-20, 1940)

        Анимация_Запустить({
            Время_Просчет: Время_Просчета_Линейная,
            Продолжительность_Анимации: Значение_Получить_Случайное(5, 8),
            Анимация: function (п_Время) {
                this.Квадрат.Позиция.X = Линейная_Интерполяция(Позиция_X_Изначальная, 540, п_Время)
                this.Квадрат.Позиция.Y = Линейная_Интерполяция(Позиция_Y_Изначальная, 960, п_Время)
                this.Квадрат.Прозрачность = Линейная_Интерполяция(1, 0, п_Время)
            }.bind(this),
            Конец_Анимации: function () {
                if (this.Активный) {
                    this.Активировать()
                }
            }.bind(this)
        })
    }

    Обновить() {
        if (!this.Активный) {
            return
        }
        this.Квадрат.Обновить()
    }
}

function Эффекты_Фона_Создать() {
    let Эффекты = []
    for (let и = 0; и < 40; и++) {
        Эффекты.push(new Эффект_Фона())
    }
    return Эффекты
}

let п_Индекс_Эффекта = 0

function Эффект_Фона_Активировать() {
    Анимация_Запустить({
        Продолжительность_Анимации: 0.5,
        Конец_Анимации: function () {
            Игра_Сцена.Эффекты_Фона[п_Индекс_Эффекта].Активировать()
            if (п_Индекс_Эффекта < Игра_Сцена.Эффекты_Фона.length - 1) {
                п_Индекс_Эффекта += 1
                Эффект_Фона_Активировать()
            } else {
                п_Индекс_Эффекта = 0
            }
        }
    })
}